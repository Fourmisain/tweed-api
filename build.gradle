plugins {
	id 'fabric-loom' version '0.2.4-SNAPSHOT'
	id 'maven-publish'
	id 'java-library'
	id 'com.github.johnrengelman.shadow' version '4.0.0'
}

repositories {
	mavenCentral()
	maven {
		name "Jitpack"
		url "https://jitpack.io/"
	}
	maven { url "https://minecraft.curseforge.com/api/maven"}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${minecraft_version}+build.${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc.fabric-api:fabric-networking-v0:+"
	include "net.fabricmc.fabric-api:fabric-networking-v0:+"
	modCompile "net.fabricmc.fabric-api:fabric-api-base:+"
	include "net.fabricmc.fabric-api:fabric-api-base:+"
	modCompile "net.fabricmc.fabric-api:fabric-resource-loader-v0:+"
	include "net.fabricmc.fabric-api:fabric-resource-loader-v0:+"
	modCompile "net.fabricmc.fabric-api:fabric-events-lifecycle-v0:+"
	include "net.fabricmc.fabric-api:fabric-events-lifecycle-v0:+"

	// hjson
	//compile 'org.hjson:hjson:3.0.0'
	shadow 'com.github.Siphalor:hjson-java:master-SNAPSHOT'
	implementation 'com.github.Siphalor:hjson-java:master-SNAPSHOT'
	
	// Jankson
	shadow 'blue.endless:jankson:1.1.0'
	implementation 'blue.endless:jankson:1.1.0'
	
	// Toml
	//shadow 'com.moandjiezana.toml:toml4j:0.7.2'
	//modImplementation 'com.moandjiezana.toml:toml4j:0.7.2'

	// ModMenu
	modImplementation "io.github.prospector.modmenu:ModMenu:${project.modmenu_version}"

	// Cloth Config
    modApi "me.shedaniel.cloth:config-2:${project.clothconfig_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
	classifier = ""
}

shadowJar {
	configurations = [project.configurations.shadow]
	classifier = ""
	relocate 'org.hjson', 'de.siphalor.tweed.shadow.org.hjson'
	relocate 'blue.endless.jankson', 'de.siphalor.tweed.shadow.blue.endless.jankson'
	//relocate 'com.moandjiezana.toml', 'de.siphalor.tweed.shadow.com.moandjiezana.toml'
}

remapJar {
	dependsOn shadowJar
	input shadowJar.archivePath
	output jar.archivePath
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(shadowJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
